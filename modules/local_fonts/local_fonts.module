<?php

/**
 * @file
 * Local Fonts module file.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\fontyourface\Entity\Font;
use Drupal\local_fonts\Entity\LocalFontConfigEntity;

/**
 * Implements hook_fontyourface_api()
 */
function local_fonts_fontyourface_api() {
  return [
    'version' => '3',
    'name' => 'Custom Fonts',
  ];
}

/**
 * Implements hook_page_attachments().
 */
function local_fonts_page_attachments(&$page) {
  $enabled_fonts = &drupal_static('fontyourface_fonts', []);
  $fonts = [];
  foreach ($enabled_fonts as $font) {
    if ($font->pid->value == 'local_fonts') {
      $metadata = $font->getMetadata();
      $font_id = $metadata['id'];
      $directory = file_build_uri('fontyourface/local_fonts/' . $font_id);
      $page['#attached']['html_head'][] = [
        [
          '#type' => 'html_tag',
          '#tag' => 'link',
          '#attributes' => [
            'rel' => 'stylesheet',
            'href' => file_create_url($directory . '/font.css'),
            'media' => 'all',
          ],
        ], 'local-fonts-' . $font_id,
      ];
    }
  }
}
/**
 * Saves and generates font file based on data.
 */
function local_fonts_save_and_generate_css(LocalFontConfigEntity $font_entity) {
  $directory = file_build_uri('fontyourface/local_fonts/' . $font_entity->id());
  $css_file = $directory . '/font.css';
  $font_file = $directory . '/font.woff';
  file_prepare_directory($directory, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);

  $css_file_data = "@font-face {\n";
  $css_file_data .= "font-family: '" . $font_entity->font_family . "';\n";
  $css_file_data .= "font-weight: " . $font_entity->font_weight . ";\n";
  $css_file_data .= "font-style: " . $font_entity->font_style . ";\n";
  $css_file_data .= "src: url('font.woff') format('woff');\n";
  $css_file_data .= "}\n";

  file_unmanaged_save_data(base64_decode($font_entity->getFontWoffData()), $font_file, FILE_EXISTS_REPLACE);
  file_unmanaged_save_data($css_file_data, $css_file, FILE_EXISTS_REPLACE);
  return $file_name;
}
